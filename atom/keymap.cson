# Your keymap
#
# Atom keymaps work similarly to style sheets. Just as style sheets use
# selectors to apply styles to elements, Atom keymaps use selectors to associate
# keystrokes with events in specific contexts. Unlike style sheets however,
# each selector can only be declared once.
#
# You can create a new keybinding in this file by typing "key" and then hitting
# tab.
#
# Here's an example taken from Atom's built-in keymap:
#
# 'atom-text-editor':
#   'enter': 'editor:newline'
#
# 'atom-workspace':
#   'ctrl-shift-p': 'core:move-up'
#   'ctrl-p': 'core:move-down'
#
# You can find more information about keymaps in these guides:
# * http://flight-manual.atom.io/using-atom/sections/basic-customization/#_customizing_keybindings
# * http://flight-manual.atom.io/behind-atom/sections/keymaps-in-depth/
#
# If you're having trouble with your keybindings not working, try the
# Keybinding Resolver: `Cmd+.` on macOS and `Ctrl+.` on other platforms. See the
# Debugging Guide for more information:
# * http://flight-manual.atom.io/hacking-atom/sections/debugging/#check-the-keybindings
#
# This file uses CoffeeScript Object Notation (CSON).
# If you are unfamiliar with CSON, you can read more about it in the
# Atom Flight Manual:
# http://flight-manual.atom.io/using-atom/sections/basic-customization/#_cson
'atom-text-editor[data-grammar="source clojure"]':
  'ctrl-y':       'chlorine:connect-socket-repl'
  'ctrl-e':       'chlorine:disconnect'
  'ctrl-k':       'chlorine:clear-console'
  'ctrl-f':       'chlorine:load-file'
  'ctrl-b':       'chlorine:evaluate-block'
  'ctrl-B':       'chlorine:evaluate-top-block'
  'ctrl-i':       'chlorine:inspect-block'
  'ctrl-I':       'chlorine:inspect-top-block'
  'ctrl-s':       'chlorine:evaluate-selection'
  'ctrl-C':       'chlorine:break-evaluation'
  'ctrl-c':       'chlorine:source-for-var'
  'ctrl-d':       'chlorine:doc-for-var'
  'ctrl-x':       'chlorine:run-tests-in-ns'
  'ctrl-t':       'chlorine:go-to-var-definition'
  'ctrl-r':       'chlorine:clear-inline-results'

'atom-text-editor.vim-mode-plus.insert-mode':
  'j k': 'vim-mode-plus:activate-normal-mode' # jk to escape
